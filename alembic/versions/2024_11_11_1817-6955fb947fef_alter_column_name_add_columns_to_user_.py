"""alter column name, add columns to user for profile settings

Revision ID: 6955fb947fef
Revises: 40e1db45cf2e
Create Date: 2024-11-11 18:17:12.298977

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6955fb947fef"
down_revision: Union[str, None] = "40e1db45cf2e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "notification", sa.Column("event_time", sa.DateTime(), nullable=False)
    )
    op.alter_column(
        "notification",
        "telegram_id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
    )
    op.drop_column("notification", "time_to_notify")
    op.add_column(
        "user",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column("user", sa.Column("timezone", sa.Integer(), nullable=False))
    op.add_column(
        "user", sa.Column("minutes_before_noti", sa.Integer(), nullable=False)
    )
    op.alter_column(
        "user",
        "telegram_id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('user_telegram_id_seq'::regclass)"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user",
        "telegram_id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('user_telegram_id_seq'::regclass)"
        ),
    )
    op.drop_column("user", "minutes_before_noti")
    op.drop_column("user", "timezone")
    op.drop_column("user", "created_at")
    op.add_column(
        "notification",
        sa.Column(
            "time_to_notify",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.alter_column(
        "notification",
        "telegram_id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    op.drop_column("notification", "event_time")
    # ### end Alembic commands ###
